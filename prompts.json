{
  "general":
  {
    "asking_for_entities_head": "The following statement or question between the three dashes is given: --- ",
    "initial_system_message": "You are a helpful assistant. You give short and precise answers. If you are asked for a topic, subject, or object, you only answer with the name of the topic, subject, or object. You use no more words than needed. Do not use dots or quotation marks in your answers. Your answers need to be in a machine-readable format. If you are asked for a number, you only respond with a float number. If you are asked if something exists, do not answer yes, do answer with the best example. If you are given background information by a user, favor answers derived from the background information over your own immanent answer. ",
    "ask_for_unknown_entity": "Additionally, I can search for an unknown entity in the knowledge base that is related to your identified entities. I can only search for unknown entities of the following types. If it is useful to search for an entity of one of these types that is connected to your entities, return the number in front. If no unknown entity of the following types need to be searched for, return -1.\nentity types:\n{node_type_dict}"
  },
  "prime": {
    "asking_for_entities_tail_OLD": "I want to look up the main entities and their relations in a medical knowledge base. Which distinctive entities from the question should I look up that could support you to answer the question profoundly? Only list the terms, separated by commas. Answer without description or explanation. Do not list very general terms.",
    "asking_for_entities_tail": "I want to lookup the the answer in a medical knowledge base. The knowledge base has the entities: {node_type_list}, and it has the relations: {edge_type_list}. Return a sequence of triplets (entity1_type entity1_name -> relation -> entity_2_type entity_2_name), separated by commas, describing which entities I should lookup in the knowledge base to answer the question between the three dashes. Use |x1| to label an unknown entity. Use |x2|, |x3|, etc. to label distinct unknown entities. Put the type of an entity in front of its name. Here is an example of such a sequence of triplets: author 'Hemingway' -> author___writes___paper -> paper |x1|, paper |x1| -> paper___has_topic___field_of_study -> field_of_study 'how mice learn to run'. Answer without description or explanation. Only list those triplets that can be inferred from the query directly. Do not list triplets, where you are not sure. ",
    "ask_for_unknown_entity": "Is the question between the three dashes asking for an unknown medical entity? If yes, is the type of the entity in the following dictionary? If yes, return the number in front. In all other cases return -1.\nThe dictionary is:\n{node_type_dict}",
    "ask_informed_query_head": "Consider the following background information to be true facts. Now, based on this background information, answer in medical language without description or explanation my question: \n{question}\n\nBackground information:\nEntities:\n",
    "ask_informed_query_head_5_answers": "Consider the following background information to be true facts. Now, based on this background information, answer in medical language without description or explanation my following question. Provide five possible answers, separated by comma, starting with the most relevant. \nMy question is:{question}\n\nBackground information:\nEntities:\n"
  },
  "mag": {
    "asking_for_entities_head": "The following query between the three dashes is given, asking for a certain paper: --- ",
    "asking_for_entities_tail_OLD": "I want to look up the main entities and their relations in a paper authorship knowledge base. Which distinctive entities of the following types from the question should I look up that could support you to answer the question profoundly? I can look up entities of the following types:\n{node_type_dict}\nList the entities separated by commas. Add the number indicating the type in round brackets after each entity. Answer without description or explanation. Do not list very general terms.",
    "asking_for_entities_tail_v0_1": "I want to look up the main entities and their relations in a paper authorship knowledge base. It has the entities: {node_type_list}, and it has the relations: {edge_type_list}. Return a sequence describing which entities I should lookup in the knowledge base to answer the question between the three dashes. Use x1, x2, x3, etc. for unknown entities. Put the type of an entity in front of its name. Here is an example of such a sequence: author 'Hemmingway' -> author___writes___paper -> paper x1 -> paper___has___field_of_study 'how mice learn to run'. Answer without description or explanation.",
    "asking_for_entities_tail": "I want to lookup the the answer in a paper authorship knowledge base. The knowledge base has the entities: {node_type_list}, and it has the relations: {edge_type_list}. Return a sequence of triplets (entity1_type entity1_name -> relation -> entity_2_type entity_2_name), separated by semicolons, describing the question between the three dashes. Use |?1| to label an unknown entity as a variable that answers the query. Use |?2|, |?3|, etc. to label further unknown entities as variables, if necessary. Use the same variable if it refers to the same unknown. Use different variables if it refers to different unknowns. Always put the type of an entity in front of its name. Finally, after the last semicolon, add all additional properties about the solution |?1| that do not fit in the triplets. Answer without description or explanation. Here is an example of such a sequence of triplets: author 'Hemingway' -> author___writes___paper -> paper |?1|; paper |?1| -> paper___has_topic___field_of_study -> field_of_study 'how mice learn to run'; paper |?1| paper___cites___paper |?2|; year of publication: 2023, describes how field mice grow up.",
    "asking_for_entities_tail_v0_2": "I want to lookup the the answer in a paper authorship knowledge base. The knowledge base has the entities: {node_type_list}, and it has the relations: {edge_type_list}. Return a sequence of triplets (entity1_type entity1_name -> relation -> entity_2_type entity_2_name), separated by commas, describing the question between the three dashes. Use |?1| to label an unknown entity as a variable that answers the . Use |?2|, |?3|, etc. to label further unknown entities as variables. Use the same variable if it refers to the same unknown. Use different variables if it refers to different unknowns. Always put the type of an entity in front of its name. Here is an example of such a sequence of triplets: author 'Hemingway' -> author___writes___paper -> paper |?1|, paper |?1| -> paper___has_topic___field_of_study -> field_of_study 'how mice learn to run'. Answer without description or explanation.",
    "ask_for_unknown_entity": "Is the question between the three dashes asking for an unknown entity of one of the following types? If yes, is the type of the entity in the following dictionary? If yes, return the number in front. In all other cases return -1.\nThe dictionary is:\n{node_type_dict}",
    "ask_informed_query_head": "Consider the following background information to be true facts. Now, based on this background information, answer without description or explanation my question: \n{question}\n\nBackground information:\nEntities:\n"
  }
}